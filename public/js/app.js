document.addEventListener("DOMContentLoaded", function () {
    const endpoint = "https://3dprintsageserver.3dprintsage.xyz/"; // Reemplaza con tu URL real
    const chatWindow = document.getElementById('chat-window');
    const chatMessages = document.getElementById('chat-messages');
    const messageInput = document.getElementById('message-input');
    const sendMessageBtn = document.getElementById('send-message');
    const toggleChatbotBtn = document.getElementById('toggle-chatbot');
    let socket;

    // Función para obtener la hora actual
    function getCurrentTime() {
        const now = new Date();
        const hours = now.getHours().toString().padStart(2, '0');
        const minutes = now.getMinutes().toString().padStart(2, '0');
        return `${hours}:${minutes}`;
    }

    // Función para agregar un mensaje al chat
    function addMessage(message, sender) {
        const messageElement = document.createElement('div');
        messageElement.className = sender === 'ChatBot' ? 'message bot-message' : 'message user-message';
        
        const messageContent = document.createElement('div');
        messageContent.className = 'message-content';
        messageContent.innerText = `${message}`;
        
        const messageTime = document.createElement('div');
        messageTime.className = 'message-time';
        messageTime.innerText = getCurrentTime();

        messageElement.appendChild(messageContent);
        messageElement.appendChild(messageTime);
        chatMessages.appendChild(messageElement);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // Función para enviar un mensaje al servidor
    function sendMessage(message) {
        if (socket && message.trim() !== '') {
            const modifiedMessage = `${message} en español`;
            socket.emit('chat message', modifiedMessage);
            addMessage(message, 'Tú');  // Añadir solo el mensaje original al chat
            messageInput.value = '';
        }
    }

    // Función para manejar el evento de clic en el botón de enviar
    sendMessageBtn.addEventListener('click', function () {
        const message = messageInput.value.trim();
        sendMessage(message);
    });

    // Función para manejar el evento de tecla Enter en el campo de entrada
    messageInput.addEventListener('keypress', function (event) {
        if (event.key === 'Enter') {
            const message = messageInput.value.trim();
            sendMessage(message);
        }
    });

    // Función para abrir/cerrar el chatbot
    toggleChatbotBtn.addEventListener('click', function () {
        chatWindow.style.display = chatWindow.style.display === 'none' ? 'block' : 'none';
        if (chatWindow.style.display === 'block') {
            // Conectar al servidor WebSocket cuando se abre el chatbot
            socket = io(endpoint);
            socket.on('connect', function () {
                console.log('Conectado al servidor');
            });
            socket.on('chat message', function (message) {
                addMessage(message.content, 'ChatBot');
            });
        } else {
            // Desconectar del servidor WebSocket cuando se cierra el chatbot
            if (socket) {
                socket.disconnect();
            }
        }
    });
});
